/* webkit6go.h generated by valac 0.56.16, the Vala compiler, do not modify */

#ifndef __WEBKIT6GO_H__
#define __WEBKIT6GO_H__

#include <glib-object.h>
#include <gtk/gtk.h>
#include <webkit/webkit.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <gio/gio.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define TYPE_APP (app_get_type ())
#define APP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_APP, App))
#define APP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_APP, AppClass))
#define IS_APP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_APP))
#define IS_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_APP))
#define APP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_APP, AppClass))

typedef struct _App App;
typedef struct _AppClass AppClass;
typedef struct _AppPrivate AppPrivate;

struct _App {
	GObject parent_instance;
	AppPrivate * priv;
	GtkApplication* app;
	WebKitWebView* webview;
	GtkWindow* win;
};

struct _AppClass {
	GObjectClass parent_class;
};

VALA_EXTERN GType app_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (App, g_object_unref)
VALA_EXTERN App* app_application;
VALA_EXTERN void app_create (App* self,
                 const gchar* id,
                 const gchar* title);
VALA_EXTERN gint app_run (App* self,
              const gchar* uri);
VALA_EXTERN void app_file_save_dialog (const gchar* title,
                           const gchar* start,
                           GAsyncReadyCallback _callback_,
                           gpointer _user_data_);
VALA_EXTERN gchar* app_file_save_dialog_finish (GAsyncResult* _res_);
VALA_EXTERN void app_file_select_dialog (const gchar* title,
                             const gchar* pattern,
                             const gchar* start,
                             GAsyncReadyCallback _callback_,
                             gpointer _user_data_);
VALA_EXTERN gchar* app_file_select_dialog_finish (GAsyncResult* _res_);
VALA_EXTERN void app_folder_select_dialog (const gchar* title,
                               const gchar* start,
                               GAsyncReadyCallback _callback_,
                               gpointer _user_data_);
VALA_EXTERN gchar* app_folder_select_dialog_finish (GAsyncResult* _res_);
VALA_EXTERN gint app_show (const gchar* id,
               const gchar* title,
               const gchar* url);
VALA_EXTERN void app_quit (void);
VALA_EXTERN GtkApplication* app_get_application (void);
VALA_EXTERN GtkWindow* app_get_window (void);
VALA_EXTERN WebKitWebView* app_get_webview (void);
VALA_EXTERN App* app_new (void);
VALA_EXTERN App* app_construct (GType object_type);

G_END_DECLS

#endif
